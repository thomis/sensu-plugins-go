name: ci

on:
  push:
    branches:
      - "*"

  pull_request:
    branches:
      - "*"

  schedule:
  - cron: 0 2 * * 3,6

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
      ORACLE_HOME: /opt/instantclient_21_8
      LD_LIBRARY_PATH: /opt/instantclient_21_8
      OCI_DIR: /opt/instantclient_21_8
      NLS_LANG: AMERICAN_AMERICA.AL32UTF8

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '1.21.5'
          check-latest: true

      - name: Install Oracle instant client
        run: |
          mkdir -p /opt && cd /opt
          curl https://download.oracle.com/otn_software/linux/instantclient/218000/instantclient-basic-linux.x64-21.8.0.0.0dbru.zip --output instantclient.zip
          curl https://download.oracle.com/otn_software/linux/instantclient/218000/instantclient-sdk-linux.x64-21.8.0.0.0dbru.zip --output instantclient_sdk.zip
          unzip instantclient.zip
          unzip instantclient_sdk.zip

      - name: Install go tools for linting and vulnerability check
        run: |
          go install honnef.co/go/tools/cmd/staticcheck@latest
          go install golang.org/x/vuln/cmd/govulncheck@latest

      - name: Code Climate setup test reporter
        run: |
          curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
          chmod +x ./cc-test-reporter
          ./cc-test-reporter before-build

      - name: Build
        run: make format test lint vul build

      - name: Code Climate publish test coverage
        run: |
          ./cc-test-reporter after-build
        if: github.event_name != 'pull_request'
