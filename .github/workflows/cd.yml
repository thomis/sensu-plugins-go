name: cd
on:
  release:
    types: [ published ]
jobs:
  linux:
    name: Release for Linux
    runs-on: ubuntu-latest
    env:
      ORACLE_HOME: /opt/instantclient_23_8
      LD_LIBRARY_PATH: /opt/instantclient_23_8
      OCI_DIR: /opt/instantclient_23_8
      NLS_LANG: AMERICAN_AMERICA.AL32UTF8
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-go@v5
        with:
          go-version: '1.25.0'
          check-latest: true
      - name: Install Oracle instant client
        run: |
          sudo mkdir -p /opt && cd /opt
          sudo curl https://download.oracle.com/otn_software/linux/instantclient/2380000/instantclient-basic-linux.x64-23.8.0.25.04.zip --output instantclient.zip
          sudo curl https://download.oracle.com/otn_software/linux/instantclient/2380000/instantclient-sdk-linux.x64-23.8.0.25.04.zip --output instantclient_sdk.zip
          sudo unzip -o instantclient.zip
          sudo unzip -o instantclient_sdk.zip
      - name: Install staticcheck
        run: |
          go install honnef.co/go/tools/cmd/staticcheck@latest
      - name: Install govulncheck
        run: |
          go install golang.org/x/vuln/cmd/govulncheck@latest
      - name: Build
        run: |
          make clean_release test lint vul
          make build_linux_amd64
          make build_linux_arm64
      - name: Upload release for linux amd64
        uses: softprops/action-gh-release@v2
        with:
          files: |
            releases/sensu-checks-go.linux.amd64.tar.gz
            releases/sensu-checks-go.linux.amd64.tar.gz.sha512
      - name: Upload release for linux arm64
        uses: softprops/action-gh-release@v2
        with:
          files: |
            releases/sensu-checks-go.linux.arm64.tar.gz
            releases/sensu-checks-go.linux.arm64.tar.gz.sha512
  macOS:
    name: Release for macOS (ARM)
    runs-on: macos-latest
    env:
      ORACLE_HOME: /opt/oracle/instantclient_23_3
      DYLD_LIBRARY_PATH: /opt/oracle/instantclient_23_3
      OCI_DIR: /opt/oracle/instantclient_23_3
      NLS_LANG: AMERICAN_AMERICA.AL32UTF8
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-go@v5
        with:
          go-version: '1.25.0'
          check-latest: true
      - name: Install Oracle instant client
        run: |
          # Download the Basic and SDK DMG files (23.3.0.23.09)
          curl -L -o instantclient-basic.dmg https://download.oracle.com/otn_software/mac/instantclient/instantclient-basic-macos-arm64.dmg
          curl -L -o instantclient-sdk.dmg https://download.oracle.com/otn_software/mac/instantclient/instantclient-sdk-macos-arm64.dmg

          # Mount the DMG files
          hdiutil mount instantclient-basic.dmg
          hdiutil mount instantclient-sdk.dmg

          # List contents to see the structure
          echo "Contents of mounted volumes:"
          ls -la /Volumes/instantclient-basic-macos*
          ls -la /Volumes/instantclient-sdk-macos*

          # Create destination directory
          sudo mkdir -p /opt/oracle/instantclient_23_3

          # The files are likely in a subdirectory, let's find and copy them
          # Find the instantclient directory within the mounted volume
          BASIC_DIR=$(find /Volumes/instantclient-basic-macos* -type d -name "instantclient_*" -maxdepth 2 | head -1)
          SDK_DIR=$(find /Volumes/instantclient-sdk-macos* -type d -name "sdk" -maxdepth 3 | head -1)

          if [ -n "$BASIC_DIR" ]; then
            echo "Found basic files at: $BASIC_DIR"
            sudo cp -R "$BASIC_DIR"/* /opt/oracle/instantclient_23_3/
          else
            # Alternative: use the install script if present
            echo "Looking for install script..."
            INSTALL_SCRIPT=$(find /Volumes/instantclient-basic-macos* -name "install_ic.sh" -maxdepth 2 | head -1)
            if [ -n "$INSTALL_SCRIPT" ]; then
              echo "Running install script: $INSTALL_SCRIPT"
              cd $(dirname "$INSTALL_SCRIPT")
              sudo mkdir -p /opt/oracle
              sudo INSTALL_DIR=/opt/oracle "$INSTALL_SCRIPT"
            fi
          fi

          if [ -n "$SDK_DIR" ]; then
            echo "Found SDK files at: $SDK_DIR"
            sudo cp -R "$SDK_DIR" /opt/oracle/instantclient_23_3/
          fi

          # If files were installed to default location, move them
          if [ -d "$HOME/Downloads/instantclient_23_3" ]; then
            echo "Moving from default location..."
            sudo cp -R $HOME/Downloads/instantclient_23_3/* /opt/oracle/instantclient_23_3/
          fi

          # Create symbolic links for compatibility
          cd /opt/oracle/instantclient_23_3
          for lib in libclntsh.dylib libocci.dylib; do
            # Find the actual library file
            actual_lib=$(ls ${lib}.* 2>/dev/null | head -1)
            if [ -n "$actual_lib" ]; then
              echo "Creating symlink: $lib -> $actual_lib"
              sudo ln -sf "$actual_lib" "$lib"
            fi
          done

          # Unmount the DMG files
          hdiutil unmount /Volumes/instantclient-basic-macos* || true
          hdiutil unmount /Volumes/instantclient-sdk-macos* || true

          # Clean up DMG files
          rm -f instantclient-basic.dmg instantclient-sdk.dmg

          # Verify installation
          echo "Installation complete. Contents of /opt/oracle/instantclient_23_3:"
          ls -la /opt/oracle/instantclient_23_3/
      - name: Install staticcheck
        run: |
          go install honnef.co/go/tools/cmd/staticcheck@latest
      - name: Install govulncheck
        run: |
          go install golang.org/x/vuln/cmd/govulncheck@latest
      - name: Build
        run: |
          sudo sh -c 'echo "#!/bin/sh\nshasum -a 512 \$1" > /usr/local/bin/sha512sum && chmod +x /usr/local/bin/sha512sum'
          make clean_release test lint vul
          make build_darwin_arm64
      - name: Upload release for darwin arm64
        uses: softprops/action-gh-release@v2
        with:
          files: |
            releases/sensu-checks-go.darwin.arm64.tar.gz
            releases/sensu-checks-go.darwin.arm64.tar.gz.sha512
